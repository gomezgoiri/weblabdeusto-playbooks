---

- name: Apache2 installation
  apt:
    pkg: "{{ item }}"
    state: present
  sudo: True
  
  when: ansible_os_family == "Debian"
  with_items:
    - apache2
    - apache2-mpm-worker
    - python-mysqldb
  tags:
    - apt
    - installation
    - install
    - debian
    - apache
    - apache2


- name: Delete posibly existing weblab instance
  # Another alternative is to pass "-f" or "--force" to weblab-admin.py, but IMHO this way is clearer
  file:  path={{weblab_installation_path}} state=absent
  # CAUTION: if the weblab_installation_path is removed and no conf file is created afterwards, apache2 might fail in the next restart
  tags:
    - clean
    - weblab
    - instance

# TODO We should ensure that only a host is present in "db group" otherwise, the first one will be selected
- name: Create weblab instance
  shell: "{{python_interpreter}} ./weblab-admin.py create {{weblab_installation_path}} --coordination-engine=redis --coordination-db-host={{groups['scheduling'][0]}} --db-engine=mysql --db-host={{groups['db'][0]}} --db-name={{db_name}} --db-user={{db_user}} --db-passwd={{db_password}}"
  args:
    chdir: "{{virtualenv_weblab_path}}/bin"
  notify:
    - restart weblab
  tags:
    - creation
    - weblab
    - instance

- name: Copy weblab daemon configuration file
  copy: src=weblab.conf dest="{{daemon_conf_file}}" # owner=foo group=foo mode=0644
  sudo: True
  tags:
    - upstart
    - daemon
    - copy
    - configuration
    - weblab


- name: Replace PYTHON_HOME in daemon with the proper path
  replace: dest="{{daemon_conf_file}}" regexp="\{\{pyhome\}\}" replace="{{virtualenv_weblab_path}}" # backup=yes
  sudo: True
  tags:
    - upstart
    - daemon
    - replace
    - configuration
    - weblab


- name: Replace the path of the weblab instance
  replace: dest="{{daemon_conf_file}}" regexp="\{\{instancedir\}\}" replace="{{weblab_installation_path}}" # backup=yes
  sudo: True
  tags:
    - upstart
    - daemon
    - replace
    - configuration
    - weblab
    - instance


- name: Replace the user which executes the upstart daemon
  replace: dest="{{daemon_conf_file}}" regexp="\{\{execuser\}\}" replace="{{remote_user}}" # backup=yes
  sudo: True
  tags:
    - upstart
    - daemon
    - replace
    - configuration
    - weblab
    - instance


# TODO Consider using Systemd
# Apparently, even Ubuntu plans to stop using Upstream
- name: Reload configuration for daemons
  shell: "initctl reload-configuration"
  sudo: True
  tags:
    - initctl
    - reload
    - configuration
    - daemon


- name: Create symbolic link for weblab instance configuration for Apache
  file: src="{{weblab_installation_path}}/httpd/apache_weblab_generic.conf" dest="/etc/apache2/conf-available/weblab.conf" state=link
  sudo: True
  tags:
    - copy
    - apache
    - configuration


- name: Enable Weblab in Apache2 and install the needed modules
  shell: "{{item}}"
  with_items:
    - a2enconf weblab
    - a2enmod proxy proxy_balancer proxy_http headers lbmethod_bybusyness
  sudo: True
  notify:
    - restart apache
    - restart weblab
  tags:
    - apache
    - configuration
    - a2enconf